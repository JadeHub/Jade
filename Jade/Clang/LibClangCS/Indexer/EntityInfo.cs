
namespace LibClang.Indexer
{
    /// <summary>
    /// Immutable wrapper around Libclang's CXIdxEntityInfo type.
    /// Generated by the indexer to represent an entity found in the translation unit.
    /// See LibClang.Indexer.EntityKind
    /// </summary>
    public class EntityInfo
    {
        #region Data

        private ITranslationUnitItemFactory _itemFactory;
        private Library.EntityInfo _handle;
        private string _name;
        private string _usr;
        private Cursor _cur;

        #endregion

        #region Constructor

        internal unsafe EntityInfo(Library.EntityInfo handle, ITranslationUnitItemFactory itemFactory)
        {
            _itemFactory = itemFactory;
            _handle = handle;
            _name = new string(_handle.name);
            _usr = new string(_handle.USR);
        }
        
        #endregion

        #region Properties

        /// <summary>
        /// Return the entity's name.
        /// </summary>
        public string Name
        {
            get { return _name;}
        }

        /// <summary>
        /// Return the entity's usr.
        /// </summary>
        public string Usr
        {
            get { return _usr; }
        }

        /// <summary>
        /// Return the entity's kind.
        /// </summary>
        public EntityKind Kind
        {
            get { return _handle.kind; }
        }

        /// <summary>
        /// Return the entity's template kind.
        /// </summary>
        public EntityCXXTemplateKind TemplateKind
        {
            get { return _handle.templateKind; }
        }

        /// <summary>
        /// Return the entity's language.
        /// </summary>
        public EntityLanguage Language
        {
            get { return _handle.language; }
        }

        /// <summary>
        /// Returns the Cursor object representing the entity.
        /// </summary>
        public Cursor Cursor
        {
            get { return _cur ?? (_cur = _itemFactory.CreateCursor(_handle.cursor)); }
        }

        #endregion
        
        public override string ToString()
        {
            return Cursor.Kind.ToString() + ":" + _name + " " + _cur.ToString();
        }       
    }
}
