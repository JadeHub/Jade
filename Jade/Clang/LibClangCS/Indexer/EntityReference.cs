using System;

namespace LibClang.Indexer
{
    /// <summary>
    /// Immutable wrapper around libClang's CXIdxEntityRefInfo type.
    /// Generated by the indexer to represent a reference to a declaration in the translation unit.
    /// </summary>
    public class EntityReference
    {
        #region Data

        private ITranslationUnitItemFactory _itemFactory;

        private Library.IndexerEntityReferenceInfo _handle;
        private Cursor _cursor;
        private SourceLocation _location;
        private EntityInfo _refedEntity;
        private EntityInfo _parentEntity;
        private Cursor _container;

        #endregion

        #region Constructor

        internal unsafe EntityReference(Library.IndexerEntityReferenceInfo handle, ITranslationUnitItemFactory itemFactory)
        {
            _handle = handle;
            _itemFactory = itemFactory;
            if (_handle.referencedEntity != (Library.EntityInfo*)IntPtr.Zero)
                _refedEntity = new EntityInfo(*_handle.referencedEntity, _itemFactory);
            if (_handle.parentEntity != (Library.EntityInfo*)IntPtr.Zero)
                _parentEntity = new EntityInfo(*_handle.parentEntity, _itemFactory);
            if(_handle.container != (Library.IndexerContainerInfo*)IntPtr.Zero)
                _container = _itemFactory.CreateCursor(_handle.container->cursor);
        }

        #endregion

        #region Properties

        /// <summary>
        /// Returns the reference kind (Direct|Implicit).
        /// </summary>
        public EntityReferenceKind Kind
        {
            get { return _handle.kind; }
        }

        /// <summary>
        /// Returns the Cursor object representing the refernece.
        /// </summary>
        public Cursor Cursor
        {
            get { return _cursor ?? (_cursor = _itemFactory.CreateCursor(_handle.cursor)); }
        }

        /// <summary>
        /// Returns the location of the reference.
        /// </summary>
        public SourceLocation Location
        {
            get { return _location ?? (_location = _itemFactory.CreateSourceLocation(Library.clang_indexLoc_getCXSourceLocation(_handle.location))); }
        }

        /// <summary>
        /// Returns the EntityInfo object representing the referenced entity.
        /// </summary>
        public EntityInfo ReferencedEntity
        {
            get { return _refedEntity;}
        }

        /// <summary>
        /// Returns the EntityInfo object representing the reference's parent entity.
        /// </summary>
        public EntityInfo ParentEntity
        {
            get { return _parentEntity; }
        }

        /// <summary>
        /// Returns the Cursor object representing the reference's container.
        /// </summary>
        public Cursor Container
        {
            get { return _container; }
        }

        #endregion

        public override string ToString()
        {
            return string.Format("Ref To {0} from {1}", _refedEntity.Name, Location);
        }
    }
}
