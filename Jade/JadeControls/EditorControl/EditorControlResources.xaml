<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:vm="clr-namespace:JadeControls.EditorControl.ViewModel"
    xmlns:local="clr-namespace:JadeControls.EditorControl">
   
  <DataTemplate DataType="{x:Type vm:DocumentViewModel}">
        <local:EditorTabItem/>
      <!--
                        x:Name="editor"
				        FontFamily="Consolas"
				        FontSize="10pt"
				        SyntaxHighlighting="C#"
                        Margin="5,0"
                        Document="{Binding Document}"/>
      -->
    </DataTemplate>
    

    <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#66000088" Offset="0" />
        <GradientStop Color="#BB000088" Offset="1" />
    </LinearGradientBrush>

    <!--
  This style configures both of the main content areas in the main window.
  
  <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <Border 
            Background="{StaticResource Brush_HeaderBackground}" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        
              <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
              
          </Border>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="IsTabStop" Value="False" />
  </Style>
-->
    
  <!--
  This style ensures that the borders in the main window are consistent.
-->
  <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="WhiteSmoke" />
    <Setter Property="BorderBrush" Value="LightGray" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CornerRadius" Value="5" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
  </Style>
      
  <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
  <DataTemplate x:Key="ClosableTabItemTemplate">
    <DockPanel Width="120">
            <Button Command="ApplicationCommands.Close"                    
                    CommandParameter="{Binding .}"
                    Content="X"
                    DockPanel.Dock="Right"
                    Focusable="False"
                    FontFamily="Courier" 
                    FontSize="9"
                    FontWeight="Bold"  
                    Margin="0,1,0,0"
                    Padding="0"
                    VerticalContentAlignment="Bottom"
                    Width="16" Height="16" />
        <!--
          Background="Transparent"
                BorderBrush="Transparent"
        />
       -->
      <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
    </DockPanel>
  </DataTemplate>

    
    
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                          Name="Border">                            
                            <ContentPresenter x:Name="ContentSite"                                
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="4,2,4,2"/>
                        </Border>

                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
                    
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>